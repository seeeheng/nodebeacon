{"version":3,"sources":["config/maps/room.png","config/maps/livingroom.png","config/maps/dicpart1.jpg","Map.js","index.js"],"names":["module","exports","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","Beacon","props","Circle","center","radius","Tooltip","direction","permanent","name","maps","Object","0","livingRoomPicture","1","roomPicture","2","DICPicture","beaconNames","configFile","console","log","roomNumber","property","startsWith","beacon_number","slice","length","beacon_name","push","parseBeaconNumbers","beaconCenters","beacon_x","beacon_y","parseBeaconCenters","mapBounds","x_max_px","y_max_px","parseMapBounds","mapCenters","parseMapCenters","HomeMap","onChangeValue","event","setState","location","target","value","state","lat","lng","zoom","beacon_center","map_bounds","map_centers","socketIOClient","on","data","close","position","this","filepath","corner1","latLng","corner2","bounds","latLngBounds","className","onChange","type","defaultChecked","Map","scrollWheelZoom","doubleClickZoom","minZoom","zoomSnap","crs","CRS","Simple","ImageOverlay","url","Marker","Popup","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38ba5906.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/room.e678e337.png\";","module.exports = __webpack_public_path__ + \"static/media/livingroom.8d8efb3f.png\";","module.exports = __webpack_public_path__ + \"static/media/dicpart1.df66aa78.jpg\";","import React from \"react\";\nimport { Map, Marker, Circle, Popup, Tooltip, ImageOverlay} from \"react-leaflet\";\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport roomPicture from './config/maps/room.png'\nimport livingRoomPicture from './config/maps/livingroom.png'\nimport DICPicture from './config/maps/dicpart1.jpg'\nimport socketIOClient from \"socket.io-client\";\nimport configFile from \"./config/config.json\"\n\n// Some initializing setup due to bugs in react-leaflet. This allows icons to properly show.\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\n// Some startup constants\nconst ENDPOINT = \"http://127.0.0.1:9000\";\n\n// Initializing function to add more beacons.\nconst Beacon  = (props) => {\n  return (\n    <Circle\n      center={props.center}\n      radius={props.radius}>\n      <Tooltip direction='right' permanent>{props.name}</Tooltip>\n    </Circle>\n  );\n}\n\nlet maps = new Object({0:livingRoomPicture, 1:roomPicture, 2:DICPicture})\n\n// TODO: Move this into mounting.\nconst parseBeaconNumbers = (configFile) => {\n  console.log(\"Now parsing beacon names from config file.\")\n  let beaconNames = new Object();\n  for (var roomNumber in configFile) {\n    for (var property in configFile[roomNumber]){\n      if (property.startsWith(\"beacon\")){\n        let beacon_number = property.slice(property.length-1); // getting the beacon number from the config file.\n        if (typeof beaconNames[beacon_number] == 'undefined'){ // reading config file, checking if beacon array exists. If doesn't, initialize.\n          beaconNames[beacon_number] = [];\n        }\n        let beacon_name = configFile[roomNumber][property][\"mac\"];\n        beacon_name = beacon_name.slice(beacon_name.length-4); // keeping only last 4 letters\n        beacon_name = \"BEACON \" + beacon_number + \" (\" + beacon_name + \")\"\n        beaconNames[beacon_number].push(beacon_name)\n      }\n    }\n  }\n  return beaconNames;\n}\n\nconst parseBeaconCenters = (configFile) => {\n  console.log(\"Now parsing beacon locations from config file.\")\n  let beaconCenters = new Object();\n  for (var roomNumber in configFile) {\n    for (var property in configFile[roomNumber]){\n      if (property.startsWith(\"beacon\")){\n        let beacon_number = property.slice(property.length-1); // getting the beacon number from the config file.\n        if (typeof beaconCenters[beacon_number] == 'undefined'){ // reading config file, checking if beacon array exists. If doesn't, initialize.\n          beaconCenters[beacon_number] = [];\n        }\n        let beacon_x = configFile[roomNumber][property][\"x_px\"];\n        let beacon_y = configFile[roomNumber][property][\"y_px\"];\n        beaconCenters[beacon_number].push([beacon_y,beacon_x])\n      }\n    }\n  }\n  return beaconCenters;\n}\n\nconst parseMapBounds = (configFile) => {\n  console.log(\"Now parsing beacon locations from config file.\")\n  let mapBounds = new Object();\n  for (var roomNumber in configFile) {\n    let x_max_px = configFile[roomNumber][\"map\"][\"x_max_px\"];\n    let y_max_px = configFile[roomNumber][\"map\"][\"y_max_px\"];\n    mapBounds[roomNumber] = [y_max_px, x_max_px];\n  }\n  return mapBounds;\n}\n\nconst parseMapCenters = (configFile) => {\n  console.log(\"Now parsing beacon locations from config file.\")\n  let mapCenters = new Object();\n  for (var roomNumber in configFile) {\n    let x_max_px = configFile[roomNumber][\"map\"][\"x_max_px\"];\n    let y_max_px = configFile[roomNumber][\"map\"][\"y_max_px\"];\n    mapCenters[roomNumber] = [y_max_px/2, x_max_px/2];\n  }\n  return mapCenters;\n}\n\nconst beaconNames = parseBeaconNumbers(configFile);\nconst beaconCenters = parseBeaconCenters(configFile);\nconst mapBounds = parseMapBounds(configFile);\nconst mapCenters = parseMapCenters(configFile);\n\nconsole.log(beaconCenters);\n// console.log(mapBounds)\n// console.log(mapCenters)\n\nclass HomeMap extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      lat: 0, // these coordinates are center of the room. \n      lng: 0,\n      zoom: -0.5,\n      location:2,\n      beacon_name: beaconNames,\n      beacon_center: beaconCenters,\n      map_bounds: mapBounds,\n      map_centers: mapCenters,\n      maps: maps\n    };\n  }\n\n  componentDidMount(){\n    console.log(\"About to fetch.\")\n    const socket = socketIOClient(ENDPOINT)\n    socket.on(\"updateData\", data => {\n      console.log(data);\n      this.setState({\n        lat: data.lat,\n        lng: data.lng,\n      });\n    });\n  }\n\n  componentWillUnmount(){\n    const socket = socketIOClient(ENDPOINT)\n    socket.close();\n  }\n\n  onChangeValue = (event) => {\n    // var isTrue = (event.target.value === 'true');\n    this.setState({\n      location: event.target.value,\n    });\n    console.log(this.state)\n  }\n\n  render() {\n    const position = [this.state.lat, this.state.lng]\n    const filepath = this.state.maps[this.state.location];\n    const corner1 = L.latLng([0,0]);\n    const corner2 = this.state.map_bounds[this.state.location];\n    const bounds = L.latLngBounds(corner2,corner1)\n    const center = this.state.map_centers[this.state.location];\n    // SETTING UP BEACONS.\n    const beaconRadius = 4;\n\n    return (\n      <div className=\"UI\">\n        <div onChange={this.onChangeValue} className=\"buttoncontainer\">\n          <label className=\"buttons\">\n            <input type=\"radio\" value={0} name=\"where\" /> Living Room\n            <input type=\"radio\" value={1} name=\"where\" /> Room\n            <input type=\"radio\" value={2} name=\"where\" defaultChecked={true}/> DIC            \n          </label>\n        </div>        \n        <div className=\"map\">\n          <Map \n            center={center} \n            scrollWheelZoom={false}\n            doubleClickZoom={false} \n            zoom={this.state.zoom}\n            minZoom={-2}\n            zoomSnap={0.125}\n            crs={L.CRS.Simple}>\n            \n            <ImageOverlay\n              url={filepath}\n              bounds={bounds}\n            />\n\n            <Marker position={position}>\n              <Popup>\n                You are here. <br />\n              </Popup>\n            </Marker>\n\n            <Beacon center={this.state.beacon_center[1][this.state.location]} radius={beaconRadius} name={this.state.beacon_name[1][this.state.location]}/>\n            <Beacon center={this.state.beacon_center[2][this.state.location]} radius={beaconRadius} name={this.state.beacon_name[2][this.state.location]}/>\n            <Beacon center={this.state.beacon_center[3][this.state.location]} radius={beaconRadius} name={this.state.beacon_name[3][this.state.location]}/>         \n          </Map>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default HomeMap","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport HomeMap from \"./Map\";\nimport \"./Index.css\";\nimport 'leaflet/dist/leaflet.css';\n\nReactDOM.render(\n  <HomeMap/>,\n  document.getElementById('root'),\n);\n\n// class Clock extends React.Component{ // accepts a single props (property), and returns and Element. Basic function component.\n//   constructor(props){\n//     super(props);\n//     this.state = {date: new Date()};\n//   }\n//   // lifecycle methods with a dash of async for you.\n//   componentDidMount(){\n//     this.timerID = setInterval(\n//       ()=>this.tick(),\n//       1000\n//     );\n//   }\n//   componentWillUnmount(){\n//     clearInterval(this.timerID);\n//   }\n\n//   // tick, which componentDidMount will run every second\n//   tick(){\n//     this.setState({\n//       date: new Date()\n//     });\n//   }\n\n//   render(){\n//     return(\n//       <div>\n//         <h2>The time is now {this.state.date.toLocaleTimeString()}.</h2>\n//       </div>\n//     );    \n//   }\n// }\n// const element = <Welcome name=\"Sarah\"/>;\n\n// ReactDOM.render(\n//   <Map/>,\n//   document.getElementById('root'),\n// );\n"],"sourceRoot":""}